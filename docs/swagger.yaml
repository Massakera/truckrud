definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Driver:
    properties:
      birth_date:
        type: string
      cnh:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
      vehicles:
        items:
          $ref: '#/definitions/models.Vehicle'
        type: array
    type: object
  models.Vehicle:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      drivers:
        items:
          $ref: '#/definitions/models.Driver'
        type: array
      id:
        type: integer
      license_plate:
        type: string
      updatedAt:
        type: string
      vehiclemodel:
        type: string
      year:
        type: integer
    type: object
info:
  contact: {}
paths:
  /drivers:
    get:
      consumes:
      - application/json
      description: Get a list of all drivers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Driver'
            type: array
      summary: List all drivers
      tags:
      - drivers
    post:
      consumes:
      - application/json
      description: Add a new driver with the provided information
      parameters:
      - description: Driver data
        in: body
        name: driver
        required: true
        schema:
          $ref: '#/definitions/models.Driver'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Driver'
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Add a new driver
      tags:
      - drivers
  /drivers/{id}:
    delete:
      consumes:
      - application/json
      description: Delete the driver with the given ID
      parameters:
      - description: Driver ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Delete a driver
      tags:
      - drivers
    get:
      consumes:
      - application/json
      description: Get details of a driver with the given ID
      parameters:
      - description: Driver ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Driver'
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Get a driver by ID
      tags:
      - drivers
    put:
      consumes:
      - application/json
      description: Update a driver with the given ID
      parameters:
      - description: Driver ID
        in: path
        name: id
        required: true
        type: integer
      - description: Driver data
        in: body
        name: driver
        required: true
        schema:
          $ref: '#/definitions/models.Driver'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Driver'
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Update a driver
      tags:
      - drivers
  /vehicles:
    get:
      consumes:
      - application/json
      description: Get a list of all vehicles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Vehicle'
            type: array
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: List all vehicles
      tags:
      - vehicles
    post:
      consumes:
      - application/json
      description: Add a new vehicle with the provided information
      parameters:
      - description: Vehicle data
        in: body
        name: vehicle
        required: true
        schema:
          $ref: '#/definitions/models.Vehicle'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Vehicle'
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Add a new vehicle
      tags:
      - vehicles
  /vehicles/{id}:
    delete:
      consumes:
      - application/json
      description: Delete the vehicle with the given ID
      parameters:
      - description: Vehicle ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Delete a vehicle
      tags:
      - vehicles
    get:
      consumes:
      - application/json
      description: Get details of a vehicle with the given ID
      parameters:
      - description: Vehicle ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Vehicle'
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Get a vehicle by ID
      tags:
      - vehicles
    put:
      consumes:
      - application/json
      description: Update a vehicle with the given ID
      parameters:
      - description: Vehicle ID
        in: path
        name: id
        required: true
        type: integer
      - description: Vehicle data
        in: body
        name: vehicle
        required: true
        schema:
          $ref: '#/definitions/models.Vehicle'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Vehicle'
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Update a vehicle
      tags:
      - vehicles
swagger: "2.0"
